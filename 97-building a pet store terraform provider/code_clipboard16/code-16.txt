// resourcePetUpdate updates a pet in the pet store by ID
func resourcePetUpdate(ctx context.Context, data *schema.ResourceData, meta interface{}) diag.Diagnostics {
	psClient, err := clientFromMeta(meta)
	if err != nil {
		return diag.FromErr(err)
	}

	pets, err := findPetsInStore(ctx, psClient, findPetsRequest{ID: data.Id()})
	if err != nil {
		return diag.FromErr(err)
	}

	if len(pets) == 0 {
		return diag.Diagnostics{
			{
				Severity: diag.Error,
				Summary:  "no pet was found",
				Detail:   "no pet was found when trying to update the pet by ID",
			},
		}
	}

	pet := pets[0]
	diags := fillPetFromData(pet, data)
	if diags.HasError() {
		return diags
	}

	if err := psClient.UpdatePets(ctx, []*pb.Pet{pet.Pet}); err != nil {
		return append(diags, diag.FromErr(err)...)
	}

	return diags
}