type Communicator interface {
  Start(context.Context, *RemoteCmd) error // Start takes a RemoteCmd and starts it. The RemoteCmd must not be modified after being used with Start, and it must not be used with Start again. The Start method returns immediately once the command is started. It does not wait for the command to complete. The RemoteCmd.Exited field should be used for this.
  Upload(string, io.Reader, *os.FileInfo) error // Upload uploads a file to the machine to the given path with the contents coming from the given reader. This method will block until it completes.
  UploadDir(dst string, src string, exclude []string) error // UploadDir uploads the contents of a directory recursively to the remote path. It also takes an optional slice of paths to ignore when uploading.  The folder name of the source folder should be created unless there is a trailing slash on the source "/". For example: "/tmp/src" as the source will create a "src" directory in the destination unless a trailing slash is added. This is identical behavior to rsync(1).
  Download(string, io.Writer) error // Download downloads a file from the machine from the given remote path with the contents writing to the given writer. This method will block until it completes.
  DownloadDir(src string, dst string, exclude []string) error
}