{
  "course_name": "Go for DevOps - Learn Interactively",
  "course_overview": "Go is a type-safe concurrent language. It is easy to develop and extremely performant. This course covers using the Go language to automate servers, cloud, Kubernetes, GitHub, Packer, and Terraform. \n\nYou’ll start by learning the basics of the Go language, such as concurrency and the context package. You’ll learn to interact with the local and remote filesystem using methods such as REST and gRPC. Then, you’ll learn how to use OpenTelemetry for distribution application observability and automate application release workflows with Go and GitHub Actions. Lastly, you’ll learn how to automate the process of creating system images using Packer on the AWS platform, use Go with Terraform to create your custom Terraform provider, program the Kubernetes API to extend its capabilities for your needs, provision resources using Azure's cloud SDK, and design resilient DevOps.\n\nBy the end of this course, you’ll be able to use the Go language to develop your DevOps tooling or integrate custom features with DevOps tools.",
  "course_folder": "go for devops",
  "course_lessons": [
    "0-go and devops",
    "1-introduction",
    "2-utilizing go packages",
    "3-using go s variable types",
    "4-variable scopes and shadowing",
    "5-looping in go",
    "6-using conditionals",
    "7-learning about functions",
    "8-challenge armstrong numbers",
    "9-solution review armstrong numbers",
    "10-public and private declarations",
    "11-using arrays and slices",
    "12-understanding maps",
    "13-challenge find repeating words in a sentence",
    "14-solution review find repeating words in a sentence",
    "15-understanding go pointers",
    "16-getting to know about structs",
    "17-comprehending go interfaces",
    "18-challenge implement the stringer interface",
    "19-solution review implement stringer interface",
    "20-summary and quiz on the go language basics",
    "21-introduction",
    "22-handling errors in go",
    "23-utilizing go constants",
    "24-using defer panic and recover",
    "25-utilizing goroutines for concurrency",
    "26-select and mutexes in goroutines",
    "27-challenge sum with goroutines",
    "28-solution review sum with goroutines",
    "29-understanding gos context type",
    "30-utilizing go s testing framework",
    "31-generics the new kid on the block",
    "32-adding type parameters to struct types",
    "33-summary and quiz on the go language basics",
    "34-introduction",
    "35-i o interfaces in go",
    "36-reading and writing to files",
    "37-streaming file content",
    "38-os agnostic pathing",
    "39-os agnostic filesystems",
    "40-summary and quiz on filesystem interactions",
    "41-introduction",
    "42-csv files",
    "43-using excelize when dealing with excel",
    "44-popular encoding formats json",
    "45-challenge process json data",
    "46-solution review process json data",
    "47-popular encoding formats yaml",
    "48-summary and quiz on using common data formats",
    "49-introduction",
    "50-accessing sql databases",
    "51-developing rest services and clients",
    "52-developing grpc services and clients",
    "53-summary and quiz on interacting with remote data sources",
    "54-introduction",
    "55-implementing application i o",
    "56-accessing non flag arguments",
    "57-using cobra for advanced cli applications",
    "58-handling os signals",
    "59-summary and quiz on writing command line tooling",
    "60-introduction",
    "61-using os exec to automate local changes",
    "62-using ssh in go to automate remote changes",
    "63-designing safe concurrent change automations",
    "64-writing a system agent",
    "65-summary and quiz on automating command line tasks",
    "66-introduction",
    "67-an overview of opentelemetry",
    "68-logging with context",
    "69-instrumenting for distributed tracing",
    "70-instrumenting for metrics",
    "71-alerting on metrics abnormalities",
    "72-summary and quiz on observability with opentelemetry",
    "73-introduction",
    "74-understanding the basics of github actions",
    "75-build and trigger our first github action",
    "76-building a continuous integration workflow",
    "77-building a release workflow",
    "78-creating a custom github action using go",
    "79-publishing a custom go github action",
    "80-summary and quiz on automating workflows with github actions",
    "81-introduction",
    "82-environment architecture",
    "83-using an ops service",
    "84-creating event handlers",
    "85-creating our slack application",
    "86-summary",
    "87-introduction",
    "88-initializing packer",
    "89-building an amazon machine image",
    "90-validating images with goss",
    "91-customizing packer with plugins",
    "92-releasing using and debugging a plugin",
    "93-summary and quiz on creating infrastructure using packer",
    "94-introduction",
    "95-an introduction to iac",
    "96-understanding the basics of terraform providers",
    "97-building a pet store terraform provider",
    "98-summary and quiz on infrastructure as code with terraform",
    "99-introduction",
    "100-interacting with the kubernetes api",
    "101-deploying a load balanced http application using go",
    "102-extending kubernetes with custom resources and operators",
    "103-building a pet store operator",
    "104-summary and quiz on applications in kubernetes",
    "105-introduction",
    "106-what is the cloud",
    "107-learning the basics of the azure apis",
    "108-building infrastructure using azure resource manager",
    "109-using provisioned azure infrastructure",
    "110-summary and quiz on programming the cloud",
    "111-introduction",
    "112-using overload prevention mechanisms",
    "113-using rate limiters to prevent runaway workflows",
    "114-building workflows that are repeatable and never lost",
    "115-using policies to restrict tools",
    "116-building systems with an emergency stop",
    "117-summary and quiz on designing for chaos",
    "118-installing go on local machine",
    "119-building code locally",
    "120-wrap up"
  ],
  "repo_name": "fifteenth-protection"
}
