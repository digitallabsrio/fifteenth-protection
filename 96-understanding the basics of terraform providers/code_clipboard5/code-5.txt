terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "=3.0.0"
    }
  }
}

# Configure the Microsoft Azure Provider
provider "azurerm" {
  features {}
}

# Create a resource group
resource "azurerm_resource_group" "example" {
  name     = "mygroup"
  location = "West Europe"
}

# Create a virtual network within the resource group
resource "azurerm_virtual_network" "example" {
  name                = "example-network"
  resource_group_name = azurerm_resource_group.example.name
  location            = azurerm_resource_group.example.location
  address_space       = ["10.0.0.0/16"]
}

resource "azurerm_resource_group" "mygroup" {
  name     = "mygroup"
  location = "southcentralus"
}

resource "azurerm_service_plan" "myplan" {
  name = "myplan"
  resource_group_name = azurerm_resource_group.mygroup.name
  location = azurerm_resource_group.mygroup.location
  os_type = "Linux"
  sku_name = "S1"
}

resource "random_integer" "ri" {
  min = 10000
  max = 99999
}

resource "azurerm_linux_web_app" "myapp" {
  name = "myapp-${random_integer.ri.result}"
  resource_group_name = azurerm_resource_group.mygroup.name
  location = azurerm_service_plan.myplan.location
  service_plan_id = azurerm_service_plan.myplan.id
  site_config {
    application_stack {
      docker_image = "nginxdemos/hello"
      docker_image_tag = "latest"
    }
  }
}

output "host_name" {
  value = azurerm_linux_web_app.myapp.default_hostname
}